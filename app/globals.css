@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 222.2 84% 2.5%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 3%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 3%;
    --popover-foreground: 210 40% 98%;

    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --secondary: 217.2 32.6% 12%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 12%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 12%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 12%;
    --input: 217.2 32.6% 12%;
    --ring: 224.3 76.3% 48%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    cursor: none;
  }

  /* Hide default cursor when custom cursor is active */
  a,
  button,
  input,
  textarea,
  select,
  [role="button"] {
    cursor: none;
  }
}

.glass {
  background: rgba(10, 15, 30, 0.7);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(30, 58, 138, 0.2);
  border-radius: 10px;
}

.animated-gradient {
  background: linear-gradient(-45deg, rgba(30, 58, 138, 0.5), rgba(59, 130, 246, 0.5), rgba(30, 58, 138, 0.5));
  background-size: 400% 400%;
  animation: gradient 15s ease infinite;
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.terminal-animation {
  overflow: hidden;
  border-right: 0.15em solid #3b82f6;
  white-space: nowrap;
  margin: 0 auto;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}

@keyframes blink-caret {
  from,
  to {
    border-color: transparent;
  }
  50% {
    border-color: #3b82f6;
  }
}

.floating {
  animation: floating 3s ease-in-out infinite;
}

@keyframes floating {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

/* GitHub contribution grid animation */
.contribution-cell {
  transition: all 0.5s ease;
}

.contribution-cell.active {
  filter: brightness(1.5);
  box-shadow: 0 0 8px currentColor;
}

/* CI/CD Pipeline Animation */
.pipeline-container {
  position: relative;
  height: 60px;
  overflow: hidden;
}

.pipeline-line {
  position: absolute;
  top: 50%;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, rgba(59, 130, 246, 0.2), rgba(59, 130, 246, 0.8), rgba(59, 130, 246, 0.2));
  transform: translateY(-50%);
}

.pipeline-dot {
  position: absolute;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background-color: #3b82f6;
  top: 50%;
  transform: translateY(-50%);
  animation: pipeline-dot-move 8s linear infinite;
  box-shadow: 0 0 10px #3b82f6;
}

.pipeline-dot:nth-child(2) {
  animation-delay: 2s;
}

.pipeline-dot:nth-child(3) {
  animation-delay: 4s;
}

.pipeline-dot:nth-child(4) {
  animation-delay: 6s;
}

@keyframes pipeline-dot-move {
  0% {
    left: -10px;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    left: calc(100% + 10px);
    opacity: 0;
  }
}

.pipeline-node {
  position: absolute;
  width: 24px;
  height: 24px;
  border-radius: 50%;
  background-color: #0f172a;
  border: 2px solid #3b82f6;
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.pipeline-node-pulse {
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: rgba(59, 130, 246, 0.3);
  animation: pulse 2s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
    opacity: 0.8;
  }
  70% {
    transform: scale(2);
    opacity: 0;
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

/* Custom cursor styles */
.cursor-dot {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 8px;
  height: 8px;
  background-color: #3b82f6;
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 9999;
  transition: opacity 0.3s ease-in-out;
}

.cursor-outline {
  pointer-events: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 40px;
  height: 40px;
  border: 2px solid rgba(59, 130, 246, 0.5);
  border-radius: 50%;
  transform: translate(-50%, -50%);
  z-index: 9998;
  transition: all 0.1s ease-out;
}

.cursor-dot.active,
.cursor-outline.active {
  transform: translate(-50%, -50%) scale(1.5);
}

/* Parallax effect */
.parallax {
  transition: transform 0.1s ease-out;
}

/* Scrolling pipeline animation */
.scrolling-pipeline {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}

.pipeline-path {
  position: absolute;
  width: 2px;
  height: 100%;
  background: linear-gradient(to bottom, transparent, rgba(59, 130, 246, 0.3), transparent);
}

.pipeline-path-1 {
  left: 15%;
}

.pipeline-path-2 {
  left: 85%;
}

.pipeline-scroll-dot {
  position: absolute;
  width: 6px;
  height: 6px;
  border-radius: 50%;
  background-color: #3b82f6;
  left: 50%;
  transform: translateX(-50%);
  animation: pipeline-scroll 10s linear infinite;
  box-shadow: 0 0 10px #3b82f6;
}

.pipeline-scroll-dot:nth-child(odd) {
  animation-delay: 0s;
}

.pipeline-scroll-dot:nth-child(even) {
  animation-delay: 5s;
}

@keyframes pipeline-scroll {
  0% {
    top: -10px;
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  90% {
    opacity: 1;
  }
  100% {
    top: calc(100% + 10px);
    opacity: 0;
  }
}

/* Custom scrollbar for code blocks */
.scrollbar-thin::-webkit-scrollbar {
  width: 4px;
  height: 4px;
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(15, 23, 42, 0.3);
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background: rgba(59, 130, 246, 0.5);
  border-radius: 2px;
}

/* Responsive adjustments */
@media (max-width: 640px) {
  .cursor-dot,
  .cursor-outline {
    display: none;
  }

  body {
    cursor: auto;
  }

  a,
  button,
  input,
  textarea,
  select,
  [role="button"] {
    cursor: auto;
  }
}

